services:
    nginx:
      image: nginx:alpine
      ports:
        - "80:80"  # 统一监听宿主机 80 端口
      volumes:
        - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      depends_on:
        - site-318
        - site-dt
        - site-zhenzhufen
        - site-telegrambot
      networks:
        - web-net

    site-318:
      build: ./318 
      networks:
        - web-net
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost/health"]
        interval: 30s
        timeout: 10s
        retries: 3
        start_period: 40s
      # 无 ports 映射，仅内部访问

    site-dt:
      build: ./dt  # 使用本地 Dockerfile 构建 site2
      networks:
        - web-net
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost/health"]
        interval: 30s
        timeout: 10s
        retries: 3
        start_period: 40s
      # 无 ports 映射

    site-zhenzhufen:
      build: ./zhenzhufen  # 使用本地 Dockerfile 构建 zhenzhufen
      networks:
        - web-net
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost/health"]
        interval: 30s
        timeout: 10s
        retries: 3
        start_period: 40s
      # 无 ports 映射

    site-telegrambot:
      build: ./telegrambot  # 使用本地 Dockerfile 构建 telegrambot
      networks:
        - web-net
      healthcheck:
        test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
        interval: 30s
        timeout: 10s
        retries: 3
        start_period: 40s
      # 无 ports 映射（通过 Nginx 转发）
      environment:
        - NODE_ENV=production
        - PORT=3000
        - BOT_TOKEN=${BOT_TOKEN}
        - DEEPL_API_KEY=${DEEPL_API_KEY}


networks:
  web-net:
    driver: bridge