version: '3.8'

services:
  # 中晋数据科技网站服务
  datarecover-web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: zhongjin-datarecover
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80
    volumes:
      # 可选：挂载日志目录
      - ./logs:/var/log/nginx
      # 可选：挂载配置文件（用于动态修改）
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - datarecover-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.datarecover.rule=Host(`datarecover.local`)"
      - "traefik.http.services.datarecover.loadbalancer.server.port=80"

  # 反向代理（支持外网域名访问）
  nginx-proxy:
    image: nginx:alpine
    container_name: datarecover-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./proxy/ssl:/etc/nginx/ssl:ro
    depends_on:
      - datarecover-web
    networks:
      - datarecover-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.datarecover-proxy.rule=Host(`dt.yongli.wang`)"
      - "traefik.http.services.datarecover-proxy.loadbalancer.server.port=80"

  # 可选：添加监控（Prometheus + Grafana）
  prometheus:
    image: prom/prometheus:latest
    container_name: datarecover-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - datarecover-network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: datarecover-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - datarecover-network
    profiles:
      - monitoring

networks:
  datarecover-network:
    driver: bridge
    name: datarecover-network

volumes:
  prometheus_data:
    name: datarecover-prometheus-data
  grafana_data:
    name: datarecover-grafana-data
